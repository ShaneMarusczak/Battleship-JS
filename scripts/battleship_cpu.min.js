"use strict";(()=>{let shipFound=0,shipsPlaced=0,lastShotX,lastShotY,placed,size,allShipsPlaced=!1,placedCarrier=!1,placedBattleship=!1,placedCruiser=!1,placedSubmarine=!1,placedDetroyer=!1,carrierSunk=!1,battleshipSunk=!1,cruiserSunk=!1,submarineSunk=!1,destroyerSunk=!1,shipDirection="",scanCounter=0,direction="hor",shotsfired=0;const rows=10,cols=10,cellSize=50,gameBoard=[],gameBoardContainer=document.getElementById("gameboard_cpu"),carrier=document.getElementById("carrier"),battleship=document.getElementById("battleship"),cruiser=document.getElementById("cruiser"),submarine=document.getElementById("submarine"),destroyer=document.getElementById("destroyer"),sunkSound=new Audio("static/Ship Sunk Sound.mp3"),placedShips=[],ships=[carrier,battleship,cruiser,submarine,destroyer],probabilityChart=[],shipLengths={battleship:4,carrier:5,cruiser:3,destroyer:2,submarine:3},shipsPlacedStore={battleship:placedBattleship,carrier:placedCarrier,cruiser:placedCruiser,destroyer:placedDetroyer,submarine:placedSubmarine},sunkPhrases=["Found You!","You're Sunk!","Down she goes!","Gotcha!","Ha Ha!","I'm the best!","Woo Hoo!","I'm Better!","I'm gonna win!","Easy!","Sink that ship!","Try Harder!","Yawn...","Sunk!","Oh Yeah!","You're Gonna Lose!","Really? Easy..","Yes!!","So Easy!","Child's Play!",":)"],isValidXY=(x,y)=>x<10&&y<10,getCId=(x,y)=>"c"+x+y,capitalizeFirst=str=>str.charAt(0).toUpperCase()+str.slice(1),shipSunkHelper=(num,sunkShipName)=>{sunkSound.play(),document.getElementById(sunkShipName+"Sunk_cpu").classList.remove("hitText"),document.getElementById(sunkShipName+"Sunk_cpu").classList.add("sunkText"),sunkColorChange(sunkShipName),shipFound-=num,shipDirection="";for(let i=0;i<10;i++)for(let j=0;j<10;j++)isShip(i,j,sunkShipName)&&(gameBoard[i][j][0]=4);0===window.randomIntFromInterval(0,10)?window.modal(capitalizeFirst(sunkShipName)+" Sunk!",1500):window.modal(sunkPhrases[window.randomIntFromInterval(0,sunkPhrases.length-1)],1500),shipFound>0&&shipHitButNotSunkReassign()},rotateShip=()=>{for(let i=0;i<10;i++)for(let j=0;j<10;j++)"hor"==direction?(document.getElementById(getCId(i,j)).removeEventListener("mouseover",highlight),document.getElementById(getCId(i,j)).addEventListener("mouseover",rotatedHighlight)):(document.getElementById(getCId(i,j)).removeEventListener("mouseover",rotatedHighlight),document.getElementById(getCId(i,j)).addEventListener("mouseover",highlight));direction="hor"==direction?"ver":"hor"},rotatedHighlight=e=>{const elemId=e.target.id;let canPlace=!0;for(let i=0;i<size;i++)if(!isMiss(Number(elemId[1])+i,Number(elemId[2]))){canPlace=!1;break}if(Number(elemId[1])<11-size&&canPlace){e.target.addEventListener("click",placeShip);for(let i=0;i<size;i++)document.getElementById(elemId[0]+(Number(elemId[1])+i)+elemId[2]).classList.add("blackBackground")}else e.target.removeEventListener("click",placeShip)},highlight=e=>{const elemId=e.target.id;let canPlace=!0;for(let i=0;i<size;i++)if(!isMiss(Number(elemId[1]),Number(elemId[2])+i)){canPlace=!1;break}if(Number(elemId[2])<11-size&&canPlace){e.target.addEventListener("click",placeShip);for(let i=0;i<size;i++)document.getElementById(elemId[0]+elemId[1]+(Number(elemId[2])+i)).classList.add("blackBackground")}else e.target.removeEventListener("click",placeShip)},resetColor=()=>{for(let i=0;i<10;i++)for(let j=0;j<10;j++)isMiss(i,j)&&(document.getElementById(getCId(i,j)).classList.remove("blackBackground"),document.getElementById(getCId(i,j)).classList.remove("greyBackground"))},moveShip=e=>{if(0===size&&!allShipsPlaced){let thisShip;const x=Number(e.target.id[1]),y=Number(e.target.id[2]),[,shipName]=gameBoard[x][y];shipsPlacedStore[shipName]=!1,size=shipLengths[shipName],placed=shipName,shipsPlaced--;for(const ship of placedShips)for(const coor of ship)if(coor[0]===x&&coor[1]===y){thisShip=ship;break}thisShip.forEach(s=>{const elem=document.getElementById(getCId(s[0],s[1]));elem.removeEventListener("mouseover",canMoveShipHighlight),elem.removeEventListener("mouseleave",canMoveShipHighlightRevert),elem.removeEventListener("click",moveShip),elem.classList.remove("curserPointer"),gameBoard[s[0]][s[1]][0]=0,gameBoard[s[0]][s[1]][1]=""}),placedShips.splice(placedShips.indexOf(thisShip),1)}e.stopImmediatePropagation()},allShips=["carrier","battleship","cruiser","submarine","destroyer"],placeShipSetup=e=>{if(!allShipsPlaced){const elemId=e.target.parentElement.id;if(document.getElementById(elemId).classList.contains("clicked"))return document.getElementById(elemId).classList.remove("clicked"),void(size=0);allShips.forEach(s=>document.getElementById(s).classList.remove("clicked")),("carrier"!==elemId||placedCarrier)&&("battleship"!==elemId||placedBattleship)?"cruiser"!==elemId||placedCruiser?"submarine"!==elemId||placedSubmarine?"destroyer"!==elemId||placedDetroyer||(size=shipLengths[elemId],e.target.parentElement.classList.add("clicked")):(size=shipLengths[elemId],e.target.parentElement.classList.add("clicked"),placed="submarine"):(size=shipLengths[elemId],e.target.parentElement.classList.add("clicked"),placed="cruiser"):(size=shipLengths[elemId],e.target.parentElement.classList.add("clicked"))}},canMoveShipHighlight=e=>{if(0===size){const x=Number(e.target.id[1]),y=Number(e.target.id[2]),[,shipName]=gameBoard[x][y];for(let i=0;i<10;i++)for(let j=0;j<10;j++)isShip(i,j,shipName)&&(document.getElementById(getCId(i,j)).classList.remove("blackBackground"),document.getElementById(getCId(i,j)).classList.add("greyBackground"))}},canMoveShipHighlightRevert=e=>{const x=Number(e.target.id[1]),y=Number(e.target.id[2]),[,shipName]=gameBoard[x][y];for(let i=0;i<10;i++)for(let j=0;j<10;j++)isShip(i,j,shipName)&&(document.getElementById(getCId(i,j)).classList.add("blackBackground"),document.getElementById(getCId(i,j)).classList.remove("greyBackground"))},placeShip=()=>{if(!allShipsPlaced){const ship=[];for(let i=0;i<10;i++)for(let j=0;j<10;j++)if(document.getElementById(getCId(i,j)).classList.contains("blackBackground")&&""==gameBoard[i][j][1]){size===shipLengths.carrier?gameBoard[i][j][1]="carrier":size===shipLengths.battleship?gameBoard[i][j][1]="battleship":size===shipLengths.cruiser&&"cruiser"===placed?gameBoard[i][j][1]="cruiser":size===shipLengths.submarine&&"submarine"===placed?gameBoard[i][j][1]="submarine":size===shipLengths.destroyer&&(gameBoard[i][j][1]="destroyer");const elem=document.getElementById(getCId(i,j));elem.addEventListener("click",moveShip),elem.addEventListener("mouseover",canMoveShipHighlight),elem.addEventListener("mouseleave",canMoveShipHighlightRevert),elem.removeEventListener("click",placeShip),elem.classList.add("curserPointer"),gameBoard[i][j][0]=1,ship.push([i,j])}if(size===shipLengths.carrier?(placedCarrier=!0,shipsPlaced++,document.getElementById("carrier").classList.add("notDisplayed")):size===shipLengths.battleship?(placedBattleship=!0,shipsPlaced++,document.getElementById("battleship").classList.add("notDisplayed")):size===shipLengths.cruiser?"cruiser"===placed?(placedCruiser=!0,shipsPlaced++,document.getElementById("cruiser").classList.add("notDisplayed")):"submarine"===placed&&(placedSubmarine=!0,shipsPlaced++,document.getElementById("submarine").classList.add("notDisplayed")):size===shipLengths.destroyer&&(placedDetroyer=!0,shipsPlaced++,document.getElementById("destroyer").classList.add("notDisplayed")),5===shipsPlaced){document.getElementById("downArrow").classList.add("notDisplayed"),document.getElementById("leftList").classList.remove("notDisplayed"),document.getElementById("ships").classList.add("notDisplayed"),window.modal("All ships Placed!",1400),allShipsPlaced=!0,window.gameStarted=!0;for(let i=0;i<10;i++)for(let j=0;j<10;j++){const elem=document.getElementById(getCId(i,j));elem.removeEventListener("mouseleave",resetColor),elem.removeEventListener("click",moveShip),elem.removeEventListener("mouseover",canMoveShipHighlight),elem.removeEventListener("mouseleave",canMoveShipHighlightRevert),elem.classList.remove("curserPointer")}}size=0,placedShips.push(ship)}},isShip=(x,y,shipName)=>isValidXY(x,y)&&gameBoard[x][y][1]===shipName,shipSunkChecker=()=>{let carrierCounter=0,battleshipCounter=0,cruiserCounter=0,submarineCounter=0,destroyerCounter=0;for(let i=0;i<10;i++)for(let j=0;j<10;j++)isShip(i,j,"carrier")&&isAlreadyHit(i,j)&&!carrierSunk?carrierCounter++:isShip(i,j,"battleship")&&isAlreadyHit(i,j)&&!battleshipSunk?battleshipCounter++:isShip(i,j,"cruiser")&&isAlreadyHit(i,j)&&!cruiserSunk?cruiserCounter++:isShip(i,j,"submarine")&&isAlreadyHit(i,j)&&!submarineSunk?submarineCounter++:isShip(i,j,"destroyer")&&isAlreadyHit(i,j)&&!destroyerSunk&&destroyerCounter++;carrierCounter==shipLengths.carrier&&(carrierSunk=!0,shipSunkHelper(5,"carrier")),battleshipCounter==shipLengths.battleship&&(battleshipSunk=!0,shipSunkHelper(4,"battleship")),cruiserCounter==shipLengths.cruiser&&(cruiserSunk=!0,shipSunkHelper(3,"cruiser")),submarineCounter==shipLengths.submarine&&(submarineSunk=!0,shipSunkHelper(3,"submarine")),destroyerCounter==shipLengths.destroyer&&(destroyerSunk=!0,shipSunkHelper(2,"destroyer"))},shipHitChecker=()=>{for(let i=0;i<10;i++)for(let j=0;j<10;j++)isAlreadyHit(i,j)&&document.getElementById(gameBoard[i][j][1]+"Sunk_cpu").classList.add("hitText")},gaveOverChecker=()=>{if(carrierSunk&&battleshipSunk&&cruiserSunk&&submarineSunk&&destroyerSunk){document.getElementById("losstext").style.display="block",window.gameOver=!0,gameOverColorChange(),window.sleep(1500).then(()=>window.modal("HA HA! I WIN!",2e3));const valueToPass=window.compWinsOnLoad()+1;window.setCookie("compwinsBattleship",valueToPass,.25),document.getElementById("compWins").textContent="Computer Wins: "+valueToPass}},shipFoundAttack=()=>{const x=lastShotX,y=lastShotY;if("ver"==shipDirection){if(x+1<=9){if(isMiss(x+1,y))return void missHelper(x+1,y);if(isHit(x+1,y))return hitHelper(x+1,y),void lastShotX++}if(x+1>9||alreadyFiredAt(x+1,y)){for(let i=1;i<10&&!(x-i<0||3==gameBoard[x-i][y][0]||4==gameBoard[x-i][y][0]);i++){if(isMiss(x-i,y))return void missHelper(x-i,y);if(isHit(x-i,y))return void hitHelper(x-i,y)}scanCounter=0,shipDirection=""}}if("hor"==shipDirection){if(y+1<=9){if(isMiss(x,y+1))return void missHelper(x,y+1);if(isHit(x,y+1))return hitHelper(x,y+1),void lastShotY++}if(y+1>9||alreadyFiredAt(x,y+1)){for(let i=1;i<10&&!(y-i<0||3===gameBoard[x][y-i][0]||4===gameBoard[x][y-i][0]);i++){if(isMiss(x,y-i))return void missHelper(x,y-i);if(isHit(x,y-i))return void hitHelper(x,y-i)}scanCounter=0,shipDirection=""}}if(0===scanCounter&&""===shipDirection)if(x+1>9)scanCounter++;else{if(isMiss(x+1,y))return missHelper(x+1,y),void scanCounter++;if(isHit(x+1,y))return hitHelper(x+1,y),shipDirection="ver",scanCounter=0,void lastShotX++;scanCounter++}if(1===scanCounter&&""===shipDirection)if(y+1>9)scanCounter++;else{if(isMiss(x,y+1))return missHelper(x,y+1),void scanCounter++;if(isHit(x,y+1))return hitHelper(x,y+1),shipDirection="hor",scanCounter=0,void lastShotY++;scanCounter++}if(2===scanCounter&&""===shipDirection)if(x-1<0)scanCounter++;else{if(isMiss(x-1,y))return missHelper(x-1,y),void scanCounter++;if(isHit(x-1,y))return hitHelper(x-1,y),shipDirection="ver",scanCounter=0,void lastShotX--;scanCounter++}if(scanCounter>=3&&""===shipDirection){if(isMiss(x,y-1))return missHelper(x,y-1),void scanCounter++;if(isHit(x,y-1))return hitHelper(x,y-1),shipDirection="hor",scanCounter=0,void lastShotY--;if(isMiss(x+1,y))return missHelper(x+1,y),void scanCounter++;if(isHit(x+1,y))return hitHelper(x+1,y),shipDirection="ver",scanCounter=0,void lastShotX++}},isMiss=(x,y)=>isValidXY(x,y)&&0===gameBoard[x][y][0],isHit=(x,y)=>isValidXY(x,y)&&1===gameBoard[x][y][0],isAlreadyHit=(x,y)=>isValidXY(x,y)&&2===gameBoard[x][y][0],alreadyFiredAt=(x,y)=>isValidXY(x,y)&&gameBoard[x][y][0]>1,hitHelper=(x,y)=>{document.getElementById(getCId(x,y)).classList.remove("blackBackground"),document.getElementById(getCId(x,y)).classList.add("redBackground"),gameBoard[x][y][0]=2,shipFound++,shotsfired++},missHelper=(x,y)=>{document.getElementById(getCId(x,y)).classList.remove("blackBackground"),document.getElementById(getCId(x,y)).classList.add("missBackground"),gameBoard[x][y][0]=3,shotsfired++},searchingShot=()=>{let x,y;if(shotsfired<6||0===window.randomIntFromInterval(0,8))do{x=window.randomIntFromInterval(0,8),y=window.randomIntFromInterval(0,8)}while(x%2!=0&&y%2==0||x%2==0&&y%2!=0);else[x,y]=probabilityCalculator(),resetProbabilityChart();lastShotX=x,lastShotY=y,isMiss(x,y)?missHelper(x,y):isHit(x,y)?hitHelper(x,y):alreadyFiredAt(x,y)&&searchingShot()},compMove=()=>{!window.gameOver&&window.gameStarted&&(allShipsPlaced?(shipFound>0?shipFoundAttack():searchingShot(),shipHitChecker(),shipSunkChecker(),gaveOverChecker()):window.modal("Place all ships!",1400))},shipHitButNotSunkReassign=()=>{for(let i=0;i<10;i++)for(let j=0;j<10;j++)if(isAlreadyHit(i,j))return lastShotX=i,void(lastShotY=j)},sunkColorChange=shipName=>{for(let i=0;i<10;i++)for(let j=0;j<10;j++)isShip(i,j,shipName)&&isAlreadyHit(i,j)&&(window.addClassFromElementById(getCId(i,j),"darkRedBackground"),window.removeClassFromElementById(getCId(i,j),"redBackground"))},probabilityCalculator=()=>{const lengthsLeft=[];let counter=0;carrierSunk||lengthsLeft.push(shipLengths.carrier),battleshipSunk||lengthsLeft.push(shipLengths.battleship),submarineSunk||lengthsLeft.push(shipLengths.submarine),cruiserSunk||lengthsLeft.push(shipLengths.cruiser),destroyerSunk||lengthsLeft.push(shipLengths.destroyer);for(let n=0;n<lengthsLeft.length;n++){for(let i=0;i<10;i++)for(let j=0;j<10-lengthsLeft[n]+1;j++){for(let k=0;k<lengthsLeft[n];k++)alreadyFiredAt(i,j+k)||counter++;if(counter===lengthsLeft[n])for(let k=0;k<lengthsLeft[n];k++)probabilityChart[i][j+k]++;counter=0}for(let i=0;i<10;i++)for(let j=0;j<10-lengthsLeft[n]+1;j++){for(let k=0;k<lengthsLeft[n];k++)alreadyFiredAt(j+k,i)||counter++;if(counter===lengthsLeft[n])for(let k=0;k<lengthsLeft[n];k++)probabilityChart[j+k][i]++;counter=0}}let currentMax=0,currentMaxes=[];for(let i=0;i<10;i++)for(let j=0;j<10;j++)probabilityChart[i][j]===currentMax?currentMaxes.push([i,j]):probabilityChart[i][j]>currentMax&&(currentMax=probabilityChart[i][j],currentMaxes=[],currentMaxes.push([i,j]));return currentMaxes[window.randomIntFromInterval(0,currentMaxes.length-1)]},resetProbabilityChart=()=>{for(let i=0;i<10;i++)for(let j=0;j<10;j++)probabilityChart[i][j]=0},gameOverColorChange=()=>{for(let i=0;i<10;i++)for(let j=0;j<10;j++)1===window.exportedGameBoard[i][j][0]&&window.addClassFromElementById("s"+i+j,"blackBackground")},rotateIcon=()=>{window.addClassFromElementById("rotateArrow","rotateAnimation"),window.removeClassFromElementById("rotateArrow","rotateBackAnimation")},rotateIconBack=()=>{window.removeClassFromElementById("rotateArrow","rotateAnimation"),window.addClassFromElementById("rotateArrow","rotateBackAnimation")};(()=>{window.compMoveWindow=compMove;for(let i=0;i<10;i++){gameBoard.push([]),probabilityChart.push([]);for(let j=0;j<10;j++){probabilityChart[i].push(0),gameBoard[i].push([0,""]);const cell=document.createElement("div");gameBoardContainer.appendChild(cell),cell.id="c"+j+i;const topPosition=50*j+5,leftPosition=50*i+5;cell.style.top=topPosition+"px",cell.style.left=leftPosition+"px",cell.style.backgroundColor="#80aaff",cell.addEventListener("mouseover",highlight),cell.addEventListener("mouseleave",resetColor)}}ships.forEach(s=>s.addEventListener("click",placeShipSetup)),window.addEventListenerById("rotate","mouseover",rotateIcon),window.addEventListenerById("rotate","mouseleave",rotateIconBack),window.addEventListenerById("rotate","click",rotateShip),document.getElementById("compWins").textContent="Computer Wins: "+window.compWinsOnLoad(),document.addEventListener("keydown",(function(event){192==event.keyCode&&console.log(gameBoard)})),"Y"===window.getCookie("darkMode")?window.setDarkMode():window.removeDarkMode()})()})();